import HTTP;

from "../wanbli.du" import ErrorResponse;
from "middleware.du" import Middleware;

// TokenAuth is a middleware for token based authentication.
class TokenAuth < Middleware {
    private token;
    private authHeaderField;

    init(authHeaderField, token) {
        this.authHeaderField = authHeaderField;
        this.token = token;
    }

    handle(request, response) {
        return this.authenticate(request, response);
    }

    private authenticate(request, response) {
        if (not request.headers.exists(this.authHeaderField)) {
            return ErrorResponse("invalid authorization header", HTTP.STATUS_CODE_BAD_REQUEST);
        }

        const token = request.headers.get(this.authHeaderField);
        if (token == "" or token != this.token) {
            return ErrorResponse("invalid authorization header", HTTP.STATUS_CODE_UNAUTHORIZED);
        }

	    return response;
    }
}

// BasicAuth is a middleware for basic auth authentication.
class BasicAuth < Middleware {
    init() {}

    handle(request, response) {
        return this.authenticate(request, response);
    }

    private authenticate(request, response) {
	    return response;
    }
}
